
import sys
import paho.mqtt.client as mqtt
from mpl_toolkits.basemap import Basemap
import numpy as np
import matplotlib.pyplot as plt
import csv,os
import tkinter
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2Tk
from matplotlib.figure import Figure
import folium



# plotting the lat/lon points atop map




#------------------------------CREAR VENTANA---------------------------------

map_base = folium.Map()


fig = Figure(figsize=(5, 4), dpi=100)

root = tkinter.Tk()
root.wm_title("Mapa")


canvas = FigureCanvasTkAgg(fig, master=root)  # CREAR AREA DE DIBUJO DE TKINTER.
canvas.draw()
canvas.get_tk_widget().pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
#-----------------------------BOTÃ“N "cerrar"----------------------------------
lats =[4.5940736,4.5940736,4.5940736]
lons = [-74.2064128,-74.2064128,-74.2064128]
map_base = folium.Map(location=[lats[0],lons[0]],zoom_start=16)
folium.Marker(location=[lats[0],lons[0]]).add_to(map_base)
map_base
def cerrar():
    root.quit()     
    root.destroy()

def on_connect(mqttc, obj, flags, rc):
    print("rc: "+str(rc))

def on_message(mqttc, obj, msg):
    # print(msg.topic+" "+str(msg.qos)+" "+str(msg.payload))
    value = msg.payload.decode()
    print(value)
    if value:
        lats =[4.5940736,4.5940736,4.5940736]
        lons = [-74.2064128,-74.2064128,-74.2064128]
        map_base = folium.Map(location=[lats[0],lons[0]],zoom_start=16)
        folium.Marker(location=[lats[0],lons[0]]).add_to(map_base)
        map_base
def on_publish(mqttc, obj, mid):
    print("mid: "+str(mid))

def on_subscribe(mqttc, obj, mid, granted_qos):
    print("Subscribed: "+str(mid)+" "+str(granted_qos))

def on_log(mqttc, obj, level, string):
    print(string)

def iniciar():
    mqttc = mqtt.Client(transport='websockets')   
    mqttc.on_message = on_message
    mqttc.on_connect = on_connect
    mqttc.on_publish = on_publish
    mqttc.on_subscribe = on_subscribe

    mqttc.connect("broker.mqttdashboard.com", 8000, 60)

    mqttc.subscribe("esp/test", 0)
    #mqttc.subscribe("$SYS/#", 0)
    mqttc.loop_forever()



button = tkinter.Button(master=root, text="cerrar", command=cerrar)
button2 = tkinter.Button(master=root, text="INICIAR", command=iniciar)
button.pack(side=tkinter.BOTTOM)
button2.pack(side=tkinter.BOTTOM)

tkinter.mainloop()